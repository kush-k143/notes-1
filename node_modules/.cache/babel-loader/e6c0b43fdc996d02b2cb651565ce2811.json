{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/components/MainNote.js\";\nimport React, { Component } from 'react';\nimport TitleInput from './TitleInput';\nimport InfoInput from './InfoInput';\nimport TagInput from './TagInput';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      const title = event.target.title;\n      const value = event.target.value;\n      const updatedControls = { ...this.state.formControls\n      };\n      const updatedFormElement = { ...updatedControls[title]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedControls[title] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    };\n\n    this.formSubmitHandler = () => {\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n\n      console.dir(formData);\n    };\n\n    this.state = {\n      formControls: {\n        title: {\n          value: '',\n          placeholder: 'type your title',\n          touched: false\n        },\n        info: {\n          value: '',\n          placeholder: 'type your input',\n          touched: false\n        },\n        tag: {\n          value: '',\n          placeholder: 'provide a tag',\n          touched: false\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      classtitle: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(TitleInput, {\n      title: \"title\",\n      placeholder: this.state.formControls.title.placeholder,\n      value: this.state.formControls.title.value,\n      onChange: this.changeHandler,\n      touched: this.state.formControls.title.touched,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(InfoInput, {\n      title: \"info\",\n      placeholder: this.state.formControls.info.placeholder,\n      value: this.state.formControls.info.value,\n      onChange: this.changeHandler,\n      touched: this.state.formControls.info.touched,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TagInput, {\n      title: \"tag\",\n      placeholder: this.state.formControls.tag.placeholder,\n      value: this.state.formControls.tag.value,\n      onChange: this.changeHandler,\n      touched: this.state.formControls.tag.touched,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.formSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/components/MainNote.js"],"names":["React","Component","TitleInput","InfoInput","TagInput","App","constructor","changeHandler","event","title","target","value","updatedControls","state","formControls","updatedFormElement","touched","setState","formSubmitHandler","formData","formElementId","console","dir","placeholder","info","tag","render"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\n\nimport TitleInput from './TitleInput';\nimport InfoInput from './InfoInput';\nimport TagInput from './TagInput';\n\n\nclass App extends Component {\n  \n\n  constructor() {\n    super();\n\n    this.state = {\n      formControls: {\n        \n        title: {\n          value: '',\n          placeholder: 'type your title',\n          touched: false\n        },\n        info: {\n          value: '',\n          placeholder: 'type your input',\n          touched: false\n        },\n        tag: {\n          value: '',\n          placeholder: 'provide a tag',\n          touched: false\n        },\n        \n      }\n\n    }\n  }\n\n\n  changeHandler = event => {\n    \n      const title = event.target.title;\n      const value = event.target.value;\n\n      const updatedControls = {\n        ...this.state.formControls\n      };\n      const updatedFormElement = {\n        ...updatedControls[title]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n\n      updatedControls[title] = updatedFormElement;\n\n      this.setState({\n        formControls: updatedControls,\n       \n      });\n\n  }\n  \n  \n  formSubmitHandler = () => {\n\tconst formData = {};\n\tfor (let formElementId in this.state.formControls) {\n\t    formData[formElementId] = this.state.formControls[formElementId].value;\n\t}\n    \n    \tconsole.dir(formData);\n  }\n  \n\n  render() {\n    \n    return (\n      <div classtitle=\"App\">\n          <TitleInput title=\"title\" \n                     placeholder={this.state.formControls.title.placeholder}\n                     value={this.state.formControls.title.value}\n                     onChange={this.changeHandler}\n                     touched={this.state.formControls.title.touched}\n                    \n          />\n\n          <InfoInput title=\"info\"\n                    placeholder={this.state.formControls.info.placeholder}\n                    value={this.state.formControls.info.value}\n                    onChange={this.changeHandler}\n                    touched={this.state.formControls.info.touched}\n                  \n          />\n\n          <TagInput title=\"tag\"\n                  placeholder={this.state.formControls.tag.placeholder}\n                  value={this.state.formControls.tag.value}\n                  onChange={this.changeHandler}\n                  touched={this.state.formControls.tag.touched}\n                  \n          />\n\n\n          <button onClick={this.formSubmitHandler} \n                \n            > \n              Submit\n          </button>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}