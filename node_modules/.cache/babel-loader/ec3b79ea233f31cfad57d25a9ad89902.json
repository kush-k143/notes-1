{"ast":null,"code":"var _jsxFileName = \"/home/ruchit/codes/vishu/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.readNote = e => {\n      e.preventDefault(); // console.log(e.target);\n      // const title = e.currentTarget.firstElementChild.innerHTML;\n      // const info = e.currentTarget.MiddleElementChild.innerHTML;\n      // const tag = e.currentTarget.lastElementChild.innerHTML;\n      // this.setState({ writingNote: false, currentRead: { title: title, info : info, tag : tag} }); \n    };\n\n    this.handleTitle = e => {\n      console.log(\"hello from title\", e); //func1\n    };\n\n    this.handleContent = () => {\n      console.log(\"hello from content\"); //func2\n    };\n\n    this.handleTags = () => {\n      console.log(\"hello from Tags\"); //func3\n    };\n\n    this.writeNote = () => {\n      this.setState({\n        writingNote: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleTitle: this.handleTitle,\n        handleContent: this.handleContent,\n        handleTags: this.handleTags,\n        readnote: this.readNote,\n        writeNote: this.writeNote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/ruchit/codes/vishu/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","uuid","NoteContext","createContext","NoteProvider","state","notes","note","editItem","readNote","e","preventDefault","handleTitle","console","log","handleContent","handleTags","writeNote","setState","writingNote","render","readnote","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAGN,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJQ,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KADyB;;AAAA,SASjCC,QATiC,GAStBC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF,GADc,CAEd;AACA;AACA;AACA;AACA;AACD,KAhBgC;;AAAA,SAkBjCC,WAlBiC,GAkBlBF,CAAD,IAAO;AACjBG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BJ,CAA/B,EADiB,CAEjB;AACH,KArBgC;;AAAA,SAuBjCK,aAvBiC,GAuBjB,MAAI;AAChBF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADgB,CAEhB;AACH,KA1BgC;;AAAA,SA4BjCE,UA5BiC,GA4BpB,MAAI;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADa,CAEb;AACH,KA/BgC;;AAAA,SAiCjCG,SAjCiC,GAiCrB,MAAM;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KAnCgC;AAAA;;AAqCjCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKf,KADkB;AAE1BO,QAAAA,WAAW,EAAG,KAAKA,WAFO;AAG1BG,QAAAA,aAAa,EAAC,KAAKA,aAHO;AAI1BC,QAAAA,UAAU,EAAE,KAAKA,UAJS;AAK1BK,QAAAA,QAAQ,EAAG,KAAKZ,QALU;AAM1BQ,QAAAA,SAAS,EAAG,KAAKA;AANS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQK,KAAKK,KAAL,CAAWC,QARhB,CADJ;AAYH;;AAlDgC;;AAsDrC,MAAMC,YAAY,GAAGtB,WAAW,CAACuB,QAAjC;AAEA,SAASrB,YAAT,EAAwBoB,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\nimport uuid from 'uuid'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n    readNote = e => {\n      e.preventDefault();\n      // console.log(e.target);\n      // const title = e.currentTarget.firstElementChild.innerHTML;\n      // const info = e.currentTarget.MiddleElementChild.innerHTML;\n      // const tag = e.currentTarget.lastElementChild.innerHTML;\n      // this.setState({ writingNote: false, currentRead: { title: title, info : info, tag : tag} }); \n    }; \n    \n    handleTitle = (e) => {\n        console.log(\"hello from title\",e);\n        //func1\n    };\n\n    handleContent = ()=>{\n        console.log(\"hello from content\");\n        //func2\n    }\n\n    handleTags = ()=>{\n        console.log(\"hello from Tags\");\n        //func3\n    }\n  \n    writeNote = () => {\n        this.setState({writingNote: true})\n    };\n\n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               handleTitle : this.handleTitle,\n               handleContent:this.handleContent,\n               handleTags: this.handleTags,\n               readnote : this.readNote,\n               writeNote : this.writeNote\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}