{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeNotes, detailNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      detailNotes: detailNotes,\n      note: \"\",\n      id: uuid(),\n      editItem: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        note: e.target.value\n      });\n    };\n\n    this.handleDelete = e => {\n      console.log('note deleted');\n    };\n\n    this.handleSubmit = e => {\n      const newNote = {\n        id: this.state.id,\n        note: this.state.item\n      };\n      console.log(newNote);\n      const updatedNotes = [...this.state.notes, newNote];\n      this.setState({\n        notes: updatedNotes,\n        note: '',\n        id: uuid(),\n        editNote: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleEdit: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        handleDelete: this.handleDelete\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","storeNotes","detailNotes","uuid","NoteContext","createContext","NoteProvider","state","notes","note","id","editItem","handleChange","e","setState","target","value","handleDelete","console","log","handleSubmit","newNote","item","updatedNotes","editNote","render","handleEdit","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAsBC,WAAtB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAG,EADJ;AAEJN,MAAAA,WAAW,EAAGA,WAFV;AAGJO,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,EAAE,EAAGP,IAAI,EAJL;AAKJQ,MAAAA,QAAQ,EAAG;AALP,KADyB;;AAAA,SAYjCC,YAZiC,GAYjBC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAGI,CAAC,CAACE,MAAF,CAASC;AADN,OAAd;AAGH,KAhBgC;;AAAA,SAkBjCC,YAlBiC,GAkBjBJ,CAAD,IAAO;AAClBK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KApBgC;;AAAA,SAsBjCC,YAtBiC,GAsBjBP,CAAD,IAAO;AAGpB,YAAMQ,OAAO,GAAG;AACZX,QAAAA,EAAE,EAAG,KAAKH,KAAL,CAAWG,EADJ;AAEZD,QAAAA,IAAI,EAAG,KAAKF,KAAL,CAAWe;AAFN,OAAhB;AAIAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AAEA,YAAME,YAAY,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAf,EAAqBa,OAArB,CAArB;AACG,WAAKP,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAGe,YADE;AAEVd,QAAAA,IAAI,EAAG,EAFG;AAGVC,QAAAA,EAAE,EAAGP,IAAI,EAHC;AAIVqB,QAAAA,QAAQ,EAAG;AAJD,OAAd;AAMH,KAtC+B;AAAA;;AAuCjCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EACzB,GAAG,KAAKlB,KADiB;AAEzBmB,QAAAA,UAAU,EAAG,KAAKd,YAFO;AAGzBQ,QAAAA,YAAY,EAAG,KAAKA,YAHK;AAIzBH,QAAAA,YAAY,EAAG,KAAKA;AAJK,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKU,KAAL,CAAWC,QANhB,CADJ;AAUH;;AAlDgC;;AAsDrC,MAAMC,YAAY,GAAGzB,WAAW,CAAC0B,QAAjC;AAEA,SAASxB,YAAT,EAAwBuB,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { storeNotes , detailNotes } from './data'\nimport uuid from 'uuid'\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : [],\n        detailNotes : detailNotes,\n        note : \"\",\n        id : uuid(),\n        editItem : false\n\n    }\n\n   \n\n    handleChange = (e) => {\n        this.setState({\n            note : e.target.value\n        })\n    }\n\n    handleDelete = (e) => {\n        console.log('note deleted')\n    }\n\n    handleSubmit = (e) => {\n        \n\n      const newNote = {\n          id : this.state.id,\n          note : this.state.item,\n      }  \n      console.log(newNote)\n\n      const updatedNotes = [...this.state.notes,newNote]\n         this.setState({\n             notes : updatedNotes,\n             note : '',\n             id : uuid(),\n             editNote : false\n         })\n     }\n    render() {\n        return (\n            <NoteContext.Provider value={{\n                ...this.state,\n                handleEdit : this.handleChange,\n                handleSubmit : this.handleSubmit,\n                handleDelete : this.handleDelete,\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}