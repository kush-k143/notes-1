{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.readNote = e => {\n      e.preventDefault(); // console.log(e.target);\n      // const title = e.currentTarget.firstElementChild.innerHTML;\n      // const info = e.currentTarget.MiddleElementChild.innerHTML;\n      // const tag = e.currentTarget.lastElementChild.innerHTML;\n      // this.setState({ writingNote: false, currentRead: { title: title, info : info, tag : tag} }); \n    };\n\n    this.handleClick = () => {\n      // const newTitle = document.getElementById(\"new-note-title\").value;\n      // const newContent = document.getElementById(\"new-note-content\").value;\n      // const newTag = document.getElementById(\"new-tag-content\").value;\n      // const newObject = { title: newTitle, note: newContent, tag : newTag};\n      // console.log(newTitle,newContent,newTag,\"trial\")\n      console.log(\"hello from context\"); // this.setState({\n      //   storedNotes: [...this.state.storedNotes, newObject]\n      // });\n    };\n\n    this.writeNote = () => {\n      this.setState({\n        writingNote: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleClick: this.handleClick,\n        readnote: this.readNote,\n        writeNote: this.writeNote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","uuid","NoteContext","createContext","NoteProvider","state","notes","note","editItem","readNote","e","preventDefault","handleClick","console","log","writeNote","setState","writingNote","render","readnote","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAGN,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJQ,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KADyB;;AAAA,SASjCC,QATiC,GAStBC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF,GADc,CAEd;AACA;AACA;AACA;AACA;AACD,KAhBgC;;AAAA,SAkBjCC,WAlBiC,GAkBnB,MAAM;AAChB;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EANgB,CAShB;AACA;AACA;AACH,KA9BgC;;AAAA,SAgCjCC,SAhCiC,GAgCrB,MAAM;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KAlCgC;AAAA;;AAoCjCC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKb,KADkB;AAE1BO,QAAAA,WAAW,EAAG,KAAKA,WAFO;AAG1BO,QAAAA,QAAQ,EAAG,KAAKV,QAHU;AAI1BM,QAAAA,SAAS,EAAG,KAAKA;AAJS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKK,KAAL,CAAWC,QANhB,CADJ;AAUH;;AA/CgC;;AAmDrC,MAAMC,YAAY,GAAGpB,WAAW,CAACqB,QAAjC;AAEA,SAASnB,YAAT,EAAwBkB,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\nimport uuid from 'uuid'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n    readNote = e => {\n      e.preventDefault();\n      // console.log(e.target);\n      // const title = e.currentTarget.firstElementChild.innerHTML;\n      // const info = e.currentTarget.MiddleElementChild.innerHTML;\n      // const tag = e.currentTarget.lastElementChild.innerHTML;\n      // this.setState({ writingNote: false, currentRead: { title: title, info : info, tag : tag} }); \n    }; \n    \n    handleClick = () => {\n        // const newTitle = document.getElementById(\"new-note-title\").value;\n        // const newContent = document.getElementById(\"new-note-content\").value;\n        // const newTag = document.getElementById(\"new-tag-content\").value;\n        // const newObject = { title: newTitle, note: newContent, tag : newTag};\n        // console.log(newTitle,newContent,newTag,\"trial\")\n        console.log(\"hello from context\");\n        \n      \n        // this.setState({\n        //   storedNotes: [...this.state.storedNotes, newObject]\n        // });\n    };\n  \n    writeNote = () => {\n        this.setState({writingNote: true})\n    };\n\n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               handleClick : this.handleClick,\n               readnote : this.readNote,\n               writeNote : this.writeNote\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}