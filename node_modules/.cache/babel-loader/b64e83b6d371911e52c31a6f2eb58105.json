{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.readNote = e => {\n      e.preventDefault();\n      console.log(e.target);\n      const title = e.currentTarget.firstElementChild.innerHTML;\n      const info = e.currentTarget.MiddleElementChild.innerHTML;\n      const tag = e.currentTarget.lastElementChild.innerHTML;\n      this.setState({\n        writingNote: false,\n        currentRead: {\n          title: title,\n          info: info,\n          tag: tag\n        }\n      });\n    };\n\n    this.handleClick = () => {\n      const newTitle = document.getElementById(\"new-note-title\").value;\n      const newContent = document.getElementById(\"new-note-content\").value;\n      const newTag = document.getElementById(\"new-tag-content\").value;\n      const newObject = {\n        title: newTitle,\n        note: newContent,\n        tag: newTag\n      };\n      console.log(newTitle);\n      this.setState({\n        storedNotes: [...this.state.storedNotes, newObject]\n      });\n    };\n\n    this.writeNote = () => {\n      this.setState({\n        writingNote: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleClick: this.handleClick,\n        readnote: this.readNote,\n        writeNote: this.writeNote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","uuid","NoteContext","createContext","NoteProvider","state","notes","note","editItem","readNote","e","preventDefault","console","log","target","title","currentTarget","firstElementChild","innerHTML","info","MiddleElementChild","tag","lastElementChild","setState","writingNote","currentRead","handleClick","newTitle","document","getElementById","value","newContent","newTag","newObject","storedNotes","writeNote","render","readnote","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAGN,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJQ,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KADyB;;AAAA,SASjCC,QATiC,GAStBC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAd;AACA,YAAMC,KAAK,GAAGL,CAAC,CAACM,aAAF,CAAgBC,iBAAhB,CAAkCC,SAAhD;AACA,YAAMC,IAAI,GAAGT,CAAC,CAACM,aAAF,CAAgBI,kBAAhB,CAAmCF,SAAhD;AACA,YAAMG,GAAG,GAAGX,CAAC,CAACM,aAAF,CAAgBM,gBAAhB,CAAiCJ,SAA7C;AACA,WAAKK,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,WAAW,EAAE;AAAEV,UAAAA,KAAK,EAAEA,KAAT;AAAgBI,UAAAA,IAAI,EAAGA,IAAvB;AAA6BE,UAAAA,GAAG,EAAGA;AAAnC;AAAnC,OAAd;AACD,KAhBgC;;AAAA,SAkB/BK,WAlB+B,GAkBjB,MAAM;AAClB,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA3D;AACA,YAAMC,UAAU,GAAGH,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA/D;AACA,YAAME,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA1D;AACA,YAAMG,SAAS,GAAG;AAAElB,QAAAA,KAAK,EAAEY,QAAT;AAAmBpB,QAAAA,IAAI,EAAEwB,UAAzB;AAAqCV,QAAAA,GAAG,EAAGW;AAA3C,OAAlB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AAEA,WAAKJ,QAAL,CAAc;AACZW,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAK7B,KAAL,CAAW6B,WAAf,EAA4BD,SAA5B;AADD,OAAd;AAGD,KA5B8B;;AAAA,SA8B/BE,SA9B+B,GA8BnB,MAAM;AAChB,WAAKZ,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAhC8B;AAAA;;AAiCjCY,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAK/B,KADkB;AAE1BqB,QAAAA,WAAW,EAAG,KAAKA,WAFO;AAG1BW,QAAAA,QAAQ,EAAG,KAAK5B,QAHU;AAI1B0B,QAAAA,SAAS,EAAG,KAAKA;AAJS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKG,KAAL,CAAWC,QANhB,CADJ;AAUH;;AA5CgC;;AAgDrC,MAAMC,YAAY,GAAGtC,WAAW,CAACuC,QAAjC;AAEA,SAASrC,YAAT,EAAwBoC,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\nimport uuid from 'uuid'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n    readNote = e => {\n      e.preventDefault();\n      console.log(e.target);\n      const title = e.currentTarget.firstElementChild.innerHTML;\n      const info = e.currentTarget.MiddleElementChild.innerHTML;\n      const tag = e.currentTarget.lastElementChild.innerHTML;\n      this.setState({ writingNote: false, currentRead: { title: title, info : info, tag : tag} }); \n    }; \n    \n      handleClick = () => {\n        const newTitle = document.getElementById(\"new-note-title\").value;\n        const newContent = document.getElementById(\"new-note-content\").value;\n        const newTag = document.getElementById(\"new-tag-content\").value;\n        const newObject = { title: newTitle, note: newContent, tag : newTag};\n        console.log(newTitle)\n      \n        this.setState({\n          storedNotes: [...this.state.storedNotes, newObject]\n        });\n      };\n  \n      writeNote = () => {\n        this.setState({writingNote: true})\n      }\n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               handleClick : this.handleClick,\n               readnote : this.readNote,\n               writeNote : this.writeNote\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}