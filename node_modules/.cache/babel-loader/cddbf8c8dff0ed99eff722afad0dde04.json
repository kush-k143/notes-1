{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.formSubmitHandler = () => {\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n\n      console.dir(formData);\n    };\n\n    this.changeHandler = event => {\n      const title = event.target.title;\n      const info = event.target.info;\n      const tag = event.target.tag;\n      const value = event.target.value;\n      const updatedControls = { ...this.state.formControls\n      };\n      const updatedFormElement = { ...updatedControls[title],\n        ...updatedControls[info],\n        ...updatedControls[tag]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedControls[title] = updatedFormElement;\n      updatedControls[info] = updatedFormElement;\n      updatedControls[tag] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        formSubmitHandler: this.formSubmitHandler,\n        changeHandler: this.changeHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","NoteContext","createContext","NoteProvider","state","notes","note","editItem","formSubmitHandler","formData","formElementId","formControls","value","console","dir","changeHandler","event","title","target","info","tag","updatedControls","updatedFormElement","touched","setState","render","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AAIA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAGL,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJO,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KADyB;;AAAA,SAWjCC,iBAXiC,GAWZ,MAAM;AAEvB,YAAMC,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIC,aAAT,IAA0B,KAAKN,KAAL,CAAWO,YAArC,EAAmD;AAC/CF,QAAAA,QAAQ,CAACC,aAAD,CAAR,GAA0B,KAAKN,KAAL,CAAWO,YAAX,CAAwBD,aAAxB,EAAuCE,KAAjE;AACH;;AAEGC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEP,KApBgC;;AAAA,SAuB/BM,aAvB+B,GAuBfC,KAAK,IAAI;AACvB,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,YAAMC,GAAG,GAAGJ,KAAK,CAACE,MAAN,CAAaE,GAAzB;AACA,YAAMR,KAAK,GAAGI,KAAK,CAACE,MAAN,CAAaN,KAA3B;AAEA,YAAMS,eAAe,GAAG,EACtB,GAAG,KAAKjB,KAAL,CAAWO;AADQ,OAAxB;AAGA,YAAMW,kBAAkB,GAAG,EACzB,GAAGD,eAAe,CAACJ,KAAD,CADO;AAEzB,WAAGI,eAAe,CAACF,IAAD,CAFO;AAGzB,WAAGE,eAAe,CAACD,GAAD;AAHO,OAA3B;AAKAE,MAAAA,kBAAkB,CAACV,KAAnB,GAA2BA,KAA3B;AACAU,MAAAA,kBAAkB,CAACC,OAAnB,GAA6B,IAA7B;AAEAF,MAAAA,eAAe,CAACJ,KAAD,CAAf,GAAyBK,kBAAzB;AACAD,MAAAA,eAAe,CAACF,IAAD,CAAf,GAAwBG,kBAAxB;AACAD,MAAAA,eAAe,CAACD,GAAD,CAAf,GAAuBE,kBAAvB;AAEA,WAAKE,QAAL,CAAc;AACZb,QAAAA,YAAY,EAAEU;AADF,OAAd;AAIH,KAhDgC;AAAA;;AAmDjCI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKrB,KADkB;AAE1BI,QAAAA,iBAAiB,EAAG,KAAKA,iBAFC;AAG1BO,QAAAA,aAAa,EAAG,KAAKA;AAHK,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQK,KAAKW,KAAL,CAAWC,QARhB,CADJ;AAYH;;AAhEgC;;AAoErC,MAAMC,YAAY,GAAG3B,WAAW,CAAC4B,QAAjC;AAEA,SAAS1B,YAAT,EAAwByB,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n  \n\n    formSubmitHandler  = () => {\n    \n        const formData = {};\n        for (let formElementId in this.state.formControls) {\n            formData[formElementId] = this.state.formControls[formElementId].value;\n        }\n        \n            console.dir(formData);\n  \n    }\n    \n    \n      changeHandler = event => {\n        const title = event.target.title;\n        const info = event.target.info;\n        const tag = event.target.tag;\n        const value = event.target.value;\n  \n        const updatedControls = {\n          ...this.state.formControls\n        };\n        const updatedFormElement = {\n          ...updatedControls[title],\n          ...updatedControls[info],\n          ...updatedControls[tag]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n  \n        updatedControls[title] = updatedFormElement;\n        updatedControls[info] = updatedFormElement;\n        updatedControls[tag] = updatedFormElement;\n  \n        this.setState({\n          formControls: updatedControls,\n         \n        });\n    }\n  \n\n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               formSubmitHandler : this.formSubmitHandler,\n               changeHandler : this.changeHandler\n\n             \n             \n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}