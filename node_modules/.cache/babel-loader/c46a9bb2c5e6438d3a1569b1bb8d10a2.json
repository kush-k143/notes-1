{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.readNote = e => {\n      e.preventDefault();\n      console.log(e.target);\n      const title = e.currentTarget.firstElementChild.innerHTML;\n      const note = e.currentTarget.lastElementChild.innerHTML;\n      this.setState({\n        writingNote: false,\n        currentRead: {\n          title: title,\n          note: note\n        }\n      });\n    };\n\n    this.handleClick = () => {\n      const newTitle = document.getElementById(\"new-note-title\").value;\n      const newContent = document.getElementById(\"new-note-content\").value;\n      const newObject = {\n        title: newTitle,\n        note: newContent\n      };\n      this.setState({\n        storedNotes: [...this.state.storedNotes, newObject]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleClick: this.handleClick,\n        readnote: this.readNote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","uuid","NoteContext","createContext","NoteProvider","state","notes","note","editItem","readNote","e","preventDefault","console","log","target","title","currentTarget","firstElementChild","innerHTML","lastElementChild","setState","writingNote","currentRead","handleClick","newTitle","document","getElementById","value","newContent","newObject","storedNotes","render","readnote","props","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAGN,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJQ,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KADyB;;AAAA,SASjCC,QATiC,GAStBC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAd;AACA,YAAMC,KAAK,GAAGL,CAAC,CAACM,aAAF,CAAgBC,iBAAhB,CAAkCC,SAAhD;AACA,YAAMX,IAAI,GAAGG,CAAC,CAACM,aAAF,CAAgBG,gBAAhB,CAAiCD,SAA9C;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,WAAW,EAAE;AAAEP,UAAAA,KAAK,EAAEA,KAAT;AAAgBR,UAAAA,IAAI,EAAEA;AAAtB;AAAnC,OAAd;AACD,KAfgC;;AAAA,SAiB/BgB,WAjB+B,GAiBjB,MAAM;AAClB,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA3D;AACA,YAAMC,UAAU,GAAGH,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA/D;AACA,YAAME,SAAS,GAAG;AAAEd,QAAAA,KAAK,EAAES,QAAT;AAAmBjB,QAAAA,IAAI,EAAEqB;AAAzB,OAAlB;AAEA,WAAKR,QAAL,CAAc;AACZU,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKzB,KAAL,CAAWyB,WAAf,EAA4BD,SAA5B;AADD,OAAd;AAGD,KAzB8B;AAAA;;AA2BjCE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAK1B,KADkB;AAE1BkB,QAAAA,WAAW,EAAG,KAAKA,WAFO;AAG1BS,QAAAA,QAAQ,EAAG,KAAKvB;AAHU,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKwB,KAAL,CAAWC,QALhB,CADJ;AASH;;AArCgC;;AAyCrC,MAAMC,YAAY,GAAGjC,WAAW,CAACkC,QAAjC;AAEA,SAAShC,YAAT,EAAwB+B,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\nimport uuid from 'uuid'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n    readNote = e => {\n      e.preventDefault();\n      console.log(e.target);\n      const title = e.currentTarget.firstElementChild.innerHTML;\n      const note = e.currentTarget.lastElementChild.innerHTML;\n      this.setState({ writingNote: false, currentRead: { title: title, note: note} }); \n    }; \n    \n      handleClick = () => {\n        const newTitle = document.getElementById(\"new-note-title\").value;\n        const newContent = document.getElementById(\"new-note-content\").value;\n        const newObject = { title: newTitle, note: newContent };\n    \n        this.setState({\n          storedNotes: [...this.state.storedNotes, newObject]\n        });\n      };\n  \n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               handleClick : this.handleClick,\n               readnote : this.readNote\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}