{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/components/NoteList.js\";\nimport React, { Component } from 'react';\nimport { NoteConsumer } from '../context';\nimport Note from './Note';\nimport { storeNotes } from '../data';\nexport default class NoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      note: []\n    };\n  }\n\n  render() {\n    const storedNotes = [];\n    this.state.storedNotes.forEach(note => {\n      storedNotes.push(React.createElement(\"div\", {\n        onClick: this.readNote,\n        className: \"stored-notes\",\n        key: note.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"note-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, note.title), React.createElement(\"p\", {\n        id: \"note-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, note.info), React.createElement(\"p\", {\n        id: \"note-tag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, note.tag)));\n    });\n    let view;\n\n    if (this.state.writingNote) {\n      view = React.createElement(NoteWriter, {\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else {\n      view = React.createElement(NoteReading, {\n        currentTitle: this.state.currentRead.title,\n        currentNote: this.state.currentRead.info,\n        currentTag: this.state.currentRead.tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(NoteConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, value => {\n      return value.notes.map(note => {\n        return React.createElement(Note, {\n          key: note.id,\n          note: note,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/components/NoteList.js"],"names":["React","Component","NoteConsumer","Note","storeNotes","NoteList","constructor","props","state","note","render","storedNotes","forEach","push","readNote","title","info","tag","view","writingNote","handleClick","currentRead","value","notes","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC9CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKD;;AACAC,EAAAA,MAAM,GAAG;AACR,UAAMC,WAAW,GAAG,EAApB;AACA,SAAKH,KAAL,CAAWG,WAAX,CAAuBC,OAAvB,CAA+BH,IAAI,IAAI;AACrCE,MAAAA,WAAW,CAACE,IAAZ,CACE;AAAK,QAAA,OAAO,EAAE,KAAKC,QAAnB;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAsD,QAAA,GAAG,EAAEL,IAAI,CAACM,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBN,IAAI,CAACM,KAAzB,CADF,EAEE;AAAG,QAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBN,IAAI,CAACO,IAA3B,CAFF,EAGE;AAAG,QAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBP,IAAI,CAACQ,GAAvB,CAHF,CADF;AAOD,KARD;AAUA,QAAIC,IAAJ;;AAEA,QAAI,KAAKV,KAAL,CAAWW,WAAf,EAA4B;AAC1BD,MAAAA,IAAI,GAAG,oBAAC,UAAD;AACE,QAAA,WAAW,EAAE,KAAKE,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAED,KAHD,MAGO;AACLF,MAAAA,IAAI,GAAG,oBAAC,WAAD;AACE,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWa,WAAX,CAAuBN,KADvC;AAEE,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWa,WAAX,CAAuBL,IAFtC;AAGE,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWa,WAAX,CAAuBJ,GAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAID;;AAED,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIK,KAAD,IAAW;AACV,aAAOA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBf,IAAI,IAAI;AAC9B,eAAO,oBAAE,IAAF;AAAO,UAAA,GAAG,EAAIA,IAAI,CAACgB,EAAnB;AAAuB,UAAA,IAAI,EAAIhB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KALH,CADN,CADJ;AAWS;;AA5CmC","sourcesContent":["import React , { Component } from 'react'\nimport { NoteConsumer } from '../context'\nimport Note from './Note'\nimport { storeNotes } from '../data'\n\nexport default class NoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n      note: [],\n     \n    }\n  }\n   render() { \n    const storedNotes = [];\n    this.state.storedNotes.forEach(note => {\n      storedNotes.push(\n        <div onClick={this.readNote} className=\"stored-notes\" key={note.title}>\n          <p id=\"note-title\">{note.title}</p>\n          <p id=\"note-content\">{note.info}</p>\n          <p id=\"note-tag\">{note.tag}</p>\n        </div>\n      );\n    });\n\n    let view;\n\n    if (this.state.writingNote) {\n      view = <NoteWriter \n               handleClick={this.handleClick} />;\n    } else {\n      view = <NoteReading \n               currentTitle={this.state.currentRead.title} \n               currentNote={this.state.currentRead.info}\n               currentTag={this.state.currentRead.tag} />;\n    }\n    \n    return (\n        <React.Fragment>\n              <NoteConsumer>\n                {(value) => {\n                  return value.notes.map( note => {\n                    return < Note key = {note.id} note = {note} />\n                  })\n                }}\n              </NoteConsumer>\n        </React.Fragment>\n    )\n            } \n}\n"]},"metadata":{},"sourceType":"module"}