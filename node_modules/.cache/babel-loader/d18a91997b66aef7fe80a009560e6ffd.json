{"ast":null,"code":"var _jsxFileName = \"/home/kushank/Documents/notes-1/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailNotes, storeNotes } from './data';\nimport uuid from 'uuid';\nconst NoteContext = React.createContext();\n\nclass NoteProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: storeNotes,\n      detailNotes: detailNotes,\n      note: [],\n      editItem: false\n    };\n\n    this.handleChange = event => {\n      const note = event.target.note;\n      const value = event.target.value;\n      this.setState({\n        [note]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onFormSubmit(this.state);\n      this.setState(this.initialState);\n    };\n\n    this.initialState = {\n      id: '',\n      title: '',\n      info: '',\n      tag: ''\n    };\n\n    if (props.note) {\n      this.state = props.note;\n    } else {\n      this.state = this.initialState;\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(NoteContext.Provider, {\n      value: { ...this.state,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst NoteConsumer = NoteContext.Consumer;\nexport { NoteProvider, NoteConsumer };","map":{"version":3,"sources":["/home/kushank/Documents/notes-1/src/context.js"],"names":["React","Component","detailNotes","storeNotes","uuid","NoteContext","createContext","NoteProvider","constructor","props","state","notes","note","editItem","handleChange","event","target","value","setState","handleSubmit","preventDefault","onFormSubmit","initialState","id","title","info","tag","bind","render","children","NoteConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAyC,QAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAIA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AASjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SARnBC,KAQmB,GARX;AACJC,MAAAA,KAAK,EAAGR,UADJ;AAEJD,MAAAA,WAAW,EAAGA,WAFV;AAGJU,MAAAA,IAAI,EAAG,EAHH;AAIJC,MAAAA,QAAQ,EAAG;AAJP,KAQW;;AAAA,SAmBnBC,YAnBmB,GAmBHC,KAAD,IAAW;AACxB,YAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaJ,IAA1B;AACA,YAAMK,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AAEA,WAAKC,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQK;AADI,OAAd;AAGD,KA1BkB;;AAAA,SA4BnBE,YA5BmB,GA4BHJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKX,KAAL,CAAWY,YAAX,CAAwB,KAAKX,KAA7B;AACA,WAAKQ,QAAL,CAAc,KAAKI,YAAnB;AACD,KAhCkB;;AAEjB,SAAKA,YAAL,GAAoB;AAClBC,MAAAA,EAAE,EAAE,EADc;AAElBC,MAAAA,KAAK,EAAE,EAFW;AAGlBC,MAAAA,IAAI,EAAE,EAHY;AAIlBC,MAAAA,GAAG,EAAE;AAJa,KAApB;;AAOA,QAAGjB,KAAK,CAACG,IAAT,EAAc;AACZ,WAAKF,KAAL,GAAaD,KAAK,CAACG,IAAnB;AACD,KAFD,MAEO;AACL,WAAKF,KAAL,GAAa,KAAKY,YAAlB;AACD;;AAED,SAAKR,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKR,YAAL,GAAoB,KAAKA,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAiBDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKlB,KADkB;AAE1BI,QAAAA,YAAY,EAAG,KAAKA,YAFM;AAG1BK,QAAAA,YAAY,EAAG,KAAKA;AAHM,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKV,KAAL,CAAWoB,QALhB,CADJ;AASH;;AArDgC;;AAyDrC,MAAMC,YAAY,GAAGzB,WAAW,CAAC0B,QAAjC;AAEA,SAASxB,YAAT,EAAwBuB,YAAxB","sourcesContent":["import React, { Component } from 'react'\nimport { detailNotes , storeNotes } from './data'\nimport uuid from 'uuid'\n\n\n\nconst NoteContext = React.createContext();\n\n\nclass NoteProvider extends Component {\n    state = {\n        notes : storeNotes,\n        detailNotes : detailNotes,\n        note : [],\n        editItem : false\n\n    }\n\n    constructor(props) {\n      super(props);\n      this.initialState = {\n        id: '',\n        title: '',\n        info: '',\n        tag: ''\n      }\n  \n      if(props.note){\n        this.state = props.note\n      } else {\n        this.state = this.initialState;\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange = (event) => {\n      const note = event.target.note;\n      const value = event.target.value;\n  \n      this.setState({\n        [note]: value\n      })\n    }\n  \n    handleSubmit = (event) => {\n      event.preventDefault();\n      this.props.onFormSubmit(this.state);\n      this.setState(this.initialState);\n    }\n  \n    render() {\n        return (\n            <NoteContext.Provider value={{\n               ...this.state,\n               handleChange : this.handleChange,\n               handleSubmit : this.handleSubmit\n            }}>\n                {this.props.children}\n            </NoteContext.Provider>\n        )\n    }\n}\n\n\nconst NoteConsumer = NoteContext.Consumer\n\nexport { NoteProvider , NoteConsumer };"]},"metadata":{},"sourceType":"module"}